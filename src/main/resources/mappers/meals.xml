<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bewellnesspring.meals.model.repository.mealsRepository">

    <!-- 날짜별 식사 기록 조회 -->
    <select id="getMealbyDate" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT A.meal, B.amount, C.food_name,
               C.kcal, C.na, C.protein, C.fiber, C.fat, C.cholesterol, C.carbohydrate, A.meal_id
        FROM meal AS A
                 LEFT OUTER JOIN meal_detail AS B ON A.meal_id = B.meal_id
                 LEFT OUTER JOIN food_category AS C ON B.food_id = C.id
        WHERE DATE(meal_time) = #{meal_date}
          AND user_id = #{user_id}
    </select>

    <!-- 음식 정보 조회 -->
    <select id="getFood" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT *
        FROM food_category
    </select>

    <!-- 식사 추가 -->
    <insert id="addMeal" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="meal_id">
        INSERT INTO meal (user_id, meal_time, meal)
        VALUES (#{user_id}, NOW(), #{meal});
    </insert>

    <!-- 식사 상세 정보 추가 -->
    <insert id="addMealDetails" parameterType="java.util.Map">
        INSERT INTO meal_detail (meal_id, food_id, amount)
        VALUES (#{meal_id}, #{food_id}, #{amount});
    </insert>

    <!-- 영양소 정보 조회 -->
    <select id="getNutrient" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT id, food_name, kcal, na, protein, fiber, fat, cholesterol, carbohydrate
        FROM food_category
        WHERE food_name = #{search_string}
    </select>

    <!-- 선호 음식 추가 -->
    <insert id="addFavor" parameterType="java.util.Map">
        INSERT INTO food_like (food_id, liked_at, user_id)
        VALUES (#{food_id}, NOW(), #{user_id})
    </insert>

    <!-- 문자열 기반 식사 기록 조회 -->
    <select id="getMealbyString" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT *
        FROM meal
        WHERE meal LIKE CONCAT('%', #{meal_name}, '%')
          AND user_id = #{user_id}
    </select>

    <!-- 식사 상세 정보 조회 -->
    <select id="getMealDetail" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT *
        FROM meal_detail AS A
                 LEFT OUTER JOIN food_category AS B ON A.food_id = B.id
        WHERE A.meal_id = #{meal_id}
    </select>

    <!-- meal_detail에서 meal_id로 검색하고 food_id와 amount를 수정하는 쿼리 -->
    <update id="updateMealDetail" parameterType="java.util.Map">
        UPDATE meal_detail
        SET amount = #{amount}
        WHERE mealDetailId = #{mealDetailId};
    </update>

    <!-- 식사 이름 수정 -->
    <update id="updateMeal" parameterType="java.util.Map">
        UPDATE meal
        SET meal = #{meal}
        WHERE meal_id = #{meal_id};
    </update>

    <!-- 특정 날짜의 계획 조회 -->
    <select id="getPlanbyDate" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT *
        FROM plan
        WHERE plan_date = #{plan_date}
          AND user_id = #{user_id}
    </select>

    <!-- meal_detail 삭제 -->
    <delete id="deleteMealDetail" parameterType="java.util.Map">
        DELETE FROM meal_detail
        WHERE mealDetailId = #{mealDetailId};
    </delete>

    <!-- meal 삭제 -->
    <delete id="deleteMeal" parameterType="java.util.Map">
        DELETE FROM meal
        WHERE meal_id = #{meal_id};
    </delete>

    <select id="getFavorFood" parameterType="java.util.Map">
        SELECT *
        FROM food_like AS A
        LEFT OUTER JOIN food_category AS B ON A.food_id = B.id
        WHERE A.user_id = #{user_id}
    </select>

</mapper>
